---
# API Service definition
apiVersion: v1
kind: Service
metadata:
  name: neuroca-api
  labels:
    app: neuroca
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: neuroca
    component: api
  ports:
    - port: 80
      targetPort: 8000
      name: http
  type: ClusterIP
---
# API ConfigMap for non-sensitive configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: neuroca-api-config
  labels:
    app: neuroca
    component: api
data:
  LOG_LEVEL: "INFO"
  API_WORKERS: "4"
  API_TIMEOUT: "120"
  ENABLE_DOCS: "true"
  CORS_ORIGINS: "*"
  METRICS_ENABLED: "true"
---
# API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neuroca-api
  labels:
    app: neuroca
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: neuroca
      component: api
  template:
    metadata:
      labels:
        app: neuroca
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: api
          image: ${NEUROCA_API_IMAGE}:${NEUROCA_API_TAG}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          envFrom:
            - configMapRef:
                name: neuroca-api-config
            - secretRef:
                name: neuroca-api-secrets
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: neuroca-db-credentials
                  key: url
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/startup
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: api-logs
              mountPath: /app/logs
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: api-logs
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - neuroca
                    - key: component
                      operator: In
                      values:
                        - api
                topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 60
---
# Horizontal Pod Autoscaler for API
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: neuroca-api-hpa
  labels:
    app: neuroca
    component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: neuroca-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
---
# Network Policy for API
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: neuroca-api-network-policy
  labels:
    app: neuroca
    component: api
spec:
  podSelector:
    matchLabels:
      app: neuroca
      component: api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: neuroca
              component: ingress
      ports:
        - protocol: TCP
          port: 8000
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: neuroca
              component: db
      ports:
        - protocol: TCP
          port: 5432
    - to:
        - podSelector:
            matchLabels:
              app: neuroca
              component: redis
      ports:
        - protocol: TCP
          port: 6379
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53